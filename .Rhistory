niveles
niveles=length(unique(y))
niveles
a=pairwise.t.test(x,y)$p.value
texto = "Los p-valores de los contraste de medias son: \n"
for (i in 1:(niveles-1)) {
for (j in (i+1):(niveles)) {
texto = paste(texto,niveles[i]," --",niveles[j],":",a[j,i],"\n")
}
}
j
i
a
niveles=length(unique(y))
a=pairwise.t.test(x,y)$p.value
texto = "Los p-valores de los contraste de medias son: \n"
for (i in 1:(niveles-1)) {
for (j in (i+1):(niveles-1)) {
texto = paste(texto,niveles[i]," --",niveles[j],":",a[j,i],"\n")
}
}
j
i
runApp()
texto = "Los p-valores de los contraste de medias son: \n"
for (i in 1:(niveles-1)) {
for (j in (i):(niveles-1)) {
texto = paste(texto,niveles[i]," --",niveles[j],":",a[j,i],"\n")
}
}
texto
niveles
etiquetas=unique(y)
etiquetas
for (i in 1:(niveles-1)) {
for (j in (i):(niveles-1)) {
texto = paste(texto,niveles[i]," --",niveles[j],":",a[j,i],"\n")
}
}
texto
i
j
texto = "Los p-valores de los contraste de medias son: \n"
for (i in 1:(niveles-1)) {
for (j in (i):(niveles-1)) {
texto = paste(texto,niveles[i]," --",niveles[j],":",a[j,i],"\n")
}
}
texto
texto = "Los p-valores de los contraste de medias son: \n"
for (i in 1:(niveles-1)) {
for (j in (i):(niveles-1)) {
texto = paste(texto,etiquetas[i]," --",etiquetas[j],":",a[j,i],"\n")
}
}
texgto
texto
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
etiquetqas
i=1
y
y=dt$Lugar_procedencia
niveles=length(unique(y))
etiquetas=unique(y)
a=pairwise.t.test(x,y)$p.value
texto = "Los p-valores de los contraste de medias son: \n"
i=1
j=1
a[j,i]
a
a=pairwise.t.test(x,y)$p.value
a
a[j,i]
a
etiquetas
etiquetas=levels(as.factor(y))
etiquetqas
etiquetas
runApp()
runApp()
runApp()
runApp()
y
x
x=dt$Maquiavelismo_SD3
mxy = tapply(x,y,function(x) mean(x,na.rm=T))
s=1:length(unique(y))
xcoords=s-meanOffset
xcoords1=s+meanOffset
boxplot(formula(paste(nombre1,nombre2,sep="~")),data=datos,main="Diagrama de caja",xlab=nombre2,ylab=nombre1)
mxy = tapply(x,y,function(x) mean(x,na.rm=T))
s=1:length(unique(y))
xcoords=s-meanOffset
xcoords1=s+meanOffset
boxplot(formula(paste(nombre1,nombre2,sep="~")),data=datos,main="Diagrama de caja")
nombre1="Maquiavelismo_SD3"
nombre2="Sexo"
mxy = tapply(x,y,function(x) mean(x,na.rm=T))
s=1:length(unique(y))
xcoords=s-meanOffset
xcoords1=s+meanOffset
boxplot(formula(paste(nombre1,nombre2,sep="~")),data=datos,main="Diagrama de caja")
meanOffset = .45
mxy = tapply(x,y,function(x) mean(x,na.rm=T))
s=1:length(unique(y))
xcoords=s-meanOffset
xcoords1=s+meanOffset
boxplot(,main="Diagrama de caja")
mxy = tapply(x,y,function(x) mean(x,na.rm=T))
s=1:length(unique(y))
xcoords=s-meanOffset
xcoords1=s+meanOffset
boxplot(x~y,main="Diagrama de caja",xlab=nombre2,ylab=nombre1)
nombre1="Maquiavelismo"
mxy = tapply(x,y,function(x) mean(x,na.rm=T))
s=1:length(unique(y))
xcoords=s-meanOffset
xcoords1=s+meanOffset
boxplot(x~y,main="Diagrama de caja",xlab=nombre2,ylab=nombre1)
segments(xcoords[s],mxy[s],xcoords1[s],mxy[s],col="red",lwd=2,lty=2)
mtext("La líneas cortadas indican la media",1)
mtext("La líneas cortadas indican la media",1)
meanOffset = .5
mxy = tapply(x,y,function(x) mean(x,na.rm=T))
s=1:length(unique(y))
xcoords=s-meanOffset
xcoords1=s+meanOffset
boxplot(x~y,main="Diagrama de caja",xlab=nombre2,ylab=nombre1)
segments(xcoords[s],mxy[s],xcoords1[s],mxy[s],col="red",lwd=2,lty=2)
mtext("La líneas cortadas indican la media",1)
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?binomial
plot(dbinom)
dbinom(10)
dbinom(size=10)
n=10
p=.5
x=1:n
valores = pbinom(x,size=n,prob = p)
valore
valores
plot(x,valores)
valores = dbinom(x,size=n,prob = p)
plot(x,valores)
x=0:n
valores = dbinom(x,size=n,prob = p)
plot(x,valores)
?Bar
?bar
?barplot
barplot(x,valores)
barplot(valores,x)
?barplot
barplot(valores)
axis(side=1,at=x,labels=1:n)
axis(side=1,at=x,labels=x)
x
axis(side=1,at=1+x,labels=x)
barplot(valores)
axis(side=1,at=1+x,labels=x)
barplot(valores,names.arg = x)
barplot(valores,names.arg = x,ylim = 0,max(valores))
barplot(valores,names.arg = x,ylim = c(0,max(valores)))
max(valores)
barplot(valores,names.arg = x,ylim = c(0,.5+max(valores)))
barplot(valores,names.arg = x,ylim = c(0,1.5*max(valores)))
barplot(valores,names.arg = x,ylim = c(0,1.3*max(valores)))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
updateVaribleInputs
?updateVaribleInputs
?updateSliderInput
runApp()
table(x,valores)
(x,valores)
c(x,valores)
x
htmlTable(x,valores)
htmlTable(valores,x)
?htmlTable
htmlTable(valores,x,ncol=2)
htmlTable(valores)
htmlTable(valores,ncol=1)
rbind(ncol,valores)
rbind(x,valores)
cbind(x,valores)
htmlTable(cbind(x,valores)=
htmlTable(cbind(x,valores))
htmlTable(cbind(x,round(valores,3)))
htmlTable(cbind(x,round(valores,3)),dimnames=list("",c("k","probabilidad"))
)
htmlTable(cbind(x,round(valores,3)),dimnames=list("",c("k","probabilidad")) )
htmlTable(cbind(x,round(valores,3)),dimnames=list(c(),c("k","probabilidad")) )
htmlTable(cbind(x,round(valores,3)),dimnames=list( ) )
runApp()
runApp()
runApp()
runApp()
runApp()
n=50
k=0:n
probabilidades = round(dbinom(x,size=n,prob = p),3)
k
probabilidades
k
n
k
n
probabilidades = round(dbinom(x,size=n,prob = p),3)
probabilidades
probabilidades = round(dbinom(k,size=n,prob = p),3)
probabilidades
runApp()
runApp()
?barplot
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
dt(50)
dt(x,50)
curve(dt(x,50))
rm(d)
curve(dt(x,50))
curve(dt(x, 30), from = -5, to = 5, col = "orange",
xlab = "quantile", ylab = "density", lwd = 2)
x
x=seq(-5,5,length=100)
valores = dt(x,gl)
gl=20
x=seq(-5,5,length=100)
valores = dt(x,gl)
plot(x,valores)
plot(x,valores,lw=2)
curve(x,valores,lw=2)
curve(x,valores,lwd=2)
curve(x,valores,lwd=2)
plot(x,valores,lwd=2)
plot(x,valores,lwd=2,type = "line")
plot(x,valores,lwd=2,type = "l")
plot(x,valores,lwd=2,type = "l")
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
x=seq(-5,5,length=100)
valores = dt(x,gl)
plot(x,valores,lwd=2,type = "l",ylim = c(0,0.4))
t_1 = t
big_t = -t
t
t=2.4
t_1 = -t
big_t = t
t_1
index_low_t = x<=t_1
index_high_t = x>=big_t
alphaValues[! (index_low_t | index_high_t)] = 0
alphaValues = valores
alphaValues[! (index_low_t | index_high_t)] = 0
alphaValues
sum(alphaValues)
sum(valores)
valores
sum(valores)
sum(valores)
index_high_t
index_high_t[1]
which(index_high_t)
which(index_high_t)[1]
which
witch
which
which(index_high_t)[1]
which(index_high_t)
which(index_low_t)
which(index_low_t)[-1]
which(index_low_t)[last]
tail(index_low_t)
tail(index_low_t,1)
runApp()
tail(which(index_low_t),1)
runApp()
tail(which(index_low_t),1)
runApp()
tail(which(index_low_t),1)
runApp()
runApp()
x=seq(0,30,length=1000)
valores = dchisq(x,gl)
gl=20
valores = dchisq(x,gl)
plot(x,valores,lwd=2,type = "l",ylim = c(0,0.4))
gl=10
valores = dchisq(x,gl)
plot(x,valores,lwd=2,type = "l",ylim = c(0,0.4))
gl=50
x=seq(0,30+gl,length=1000)
valores = dchisq(x,gl)
plot(x,valores,lwd=2,type = "l",ylim = c(0,0.4))
gl=5
x=seq(0,30+gl,length=1000)
valores = dchisq(x,gl)
plot(x,valores,lwd=2,type = "l",ylim = c(0,0.4))
plot(x,valores,lwd=2,type = "l",ylim = c(0,0.3))
plot(x,valores,lwd=2,type = "l",ylim = c(0,0.2))
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
x=seq(-5,5,length=11)
x
?dnorm
pnorm(0)
pnorm(3)
pnorm(-5)
pnorm(-1)
pnorm(-2)
pnorm(-2)-prnom(-1)
pnorm(-2)-pnorm(-1)
pnorm(-1)-pnorm(-2)
x
pnorm(x)
pnorm(x[2:])
shiny::runApp()
mean(encuesta1$Escala.satisfaccion.vida)
mean(encuesta1$Escala.satisfaccion.vida,na.rm=T)
encuesta$Escala.satisfaccion.vida
mean(encuesta$Escala.satisfaccion.vida)
encuesta1$Escala.satisfaccion.vida
View(encuesta1)
encuesta1$Escala.satisfaccion.vida$Escala.satisfaccion.vida
load("/disco8/home/perezoso/perezoso/cursos/cuanti/cse/shinyCuanti/data/encuesta.RData")
librar
library(dplyr)
encuesta1 %>%  group_by(Sexo) %>%  summarize(m=mean(Escala.satisfaccion.vida))
chisq.test(wealth3$Tercil_ingreso_hogar,wealth3$Orientacion_politica)
table(wealth3$Tercil_ingreso_hogar,wealth3$Orientacion_politica)
table(wealth3$Tercil_ingreso_hogar)
table(wealth3$Orientacion_politica)
99/297
101*99
101*99/297
98*99/297
(45-33,6)**2/33,6
(45-33,6)**2/33.6
(45-33,6)**2/)33.6=
(45-33,6)**2
(45-33.6)**2/33.6
(45-33.6)**2/33.6 + (39-33.6)**2/33.6 + (17-33.6)**2/33.6 + (37-32.6)**2/32.6 + (32-32.6)**2/32.6 + (29-32.6)**2/32.6 +(17-32.6)**2/32.6 + (28-32.6)**2/32.6 + (53-32.6)**2/32.6
(52-76)**2/76
(52-76)**2/76 + (183-211)**2/211 + (226-191)**2/191 + (80-63)**2/63 + (114-90)**2/90 + (280-252)**2/252 +(194-229)**2/229 + (58-75)**2/75
x=rnorm(50)
x
hist(x)
mean(x)
x=x-mean(x)
x=x/sd(x)
mean(x)
z=rnorm(50)
cor(x,z)
z=rnorm(50)
cor(x,z)
z=rnorm(50)
cor(x,z)
z=z-mean(z)
z=z/sd(z)
sd(z)
alfa=.5
y=alfa*x + (1-alfa)*z
y
cor(x,y)
alfa=1
y=alfa*x + (1-alfa)*z
cor(x,y)
alfa=.3
y=alfa*x + (1-alfa)*z
cor(x,y)
alfa=.7
y=alfa*x + (1-alfa)*z
cor(x,y)
cor(x,y)**2
cor(z,y)
cor(z,x)
alfa=.8
y=alfa*x + (1-alfa)*z
cor(z,x)
cor(z,y)
cor(z,y)
cor(x,y)
mean(y)
mean(x)
mean(z)
x*y
sum(x*y)
x
y
sum(x*y)
sum(x*z)
x*z
x
z
1.149*0.13
1.149*0.136
mean(x)
1.149*0.136
sd(x)
sum(x*y)
sum(x*y)/50
cor(x,y)
alfa
?cor.
?cor
cov(x,y)
cor(x,y)
cov(x,z)
cor(x,z)
y
mean(y)
sd(y)
y=y/sd(y)
cor(x,y)
cov(x,y)
alfa
1-alfa
0.96**2
cov(y,z)
cor(y,z)
sqrt(alfa)
alfa
alfa=0.4
y=alfa*x + (1-alfa)*z
cov(x,y)
x=rnorm(1000)
z=rnorm(1000)
x=x-mean(x)
x=x/sd(x)
z=z-mean(z)
z=z/sd(z)
y=alfa*x + (1-alfa)*z
cor(x,y)
alfa
cor(x,z)
alfa=0.8
y=alfa*x + (1-alfa)*z
cor(x,z)
cor(x,y)
alfa=.5
y=alfa*x + (1-alfa)*z
cor(x,y)
sqrt(cor(x,y))
cor(x,y)**2
sqrt(alfa)
alfa=sqrt(.5)
alfa
y=alfa*x + (1-alfa)*z
cor(x,y)
alfa
alfa=.25
alfa
y=alfa*x + (1-alfa)*z
cor(x,y)
alfa
alfa***2
alfa**2
sqrt(alfa)
cov(x,z)
cov(x,z)
sqrt(alfa)
